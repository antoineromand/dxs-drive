name: CI/CD Pipeline - Deploy

on:
  workflow_run:
    workflows: ["CI/CD Pipeline - Test & Tag Creation"]
    types: [completed]
    branches: [main]

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Java 17 Install
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Project
        run: ./gradlew build -x test
      - name: Extract Tag Version
        run: |
          TAG_NAME=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/tags" | \
            jq -r '.[-1].ref' | sed 's/refs\/tags\/v//')
          echo "VERSION=$TAG_NAME" >> $GITHUB_ENV
      - name: Debug Version
        run: |
          echo "ðŸš€ Deploying version: $VERSION"
      - name: Copy build file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH }}
          source: "build/libs/DriveProject-${{ env.VERSION }}.jar"
          target: "/home/${{ secrets.SERVER_LOC }}/drive-api/build/libs"
          strip_components: 2
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH }}
          script: |
            cd /home/${{ secrets.SERVER_LOC }}/drive-api
            echo "ðŸš€ Stopping existing containers..."
            docker compose down
            echo "ðŸ“¦ Building the latest Docker image..."
            docker build --build-arg JAR_VERSION=${{ env.VERSION }} -t driveapi:latest -t driveapi:${{ env.VERSION }} .
            echo "âœ… Image built successfully: driveapi:${{ env.VERSION }}"
            echo "ðŸš€ Restarting containers..."
            docker compose up --force-recreate --no-deps -d api
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
